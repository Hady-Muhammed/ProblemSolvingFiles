| PROBLEM | :

Write a C program to find the maximum sum of a contiguous subsequence from a given sequence of numbers a1, a2, a3, ... an ( n = number of terms in the sequence). 
Input:
You can assume that 1 <= n <= 500 and -10000 <= ai <= 10000.
Sample Output:

Input number of terms in the sequence:
5

Input the terms of the said sequence:
3
2
6
-7
8
Maximum sum of a contiguous subsequence:
12




| Problem rating | :

 Time taken for the logic thinking & implementing the code = 6:46

 Did i checked the question answer? = YES

 learned it!

| MY ANSWER (Source code) | :

#include <stdio.h>

int main(){ int sum=0,max=0,n;
    printf("Input number of terms in the sequence:");
    scanf("%d",&n);
    int a[500];
    printf("Input the terms of the said sequence:");
        for(int i = 0 ; i < n ; i++)
            scanf("%d",&a[i]);

        for(int x = 0 ; x < n ; x++){
            for(int y = 0 ; y < n ; y++){
                   sum+=a[y];
                if(sum > max)
                        max=sum;
            }
            sum=0;
        }
       printf("Maximum sum of a contiguous subsequence: \n%d",max);
}
